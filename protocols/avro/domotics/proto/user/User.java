/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package avro.domotics.proto.user;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public interface User {
  public static final org.apache.avro.Protocol PROTOCOL = org.apache.avro.Protocol.parse("{\"protocol\":\"User\",\"namespace\":\"avro.domotics.proto.user\",\"types\":[],\"messages\":{\"_sync\":{\"request\":[{\"name\":\"Clients\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":\"int\"}}},{\"name\":\"Users\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"map\",\"values\":\"boolean\"}}},{\"name\":\"addresses\",\"type\":{\"type\":\"map\",\"values\":\"string\"}}],\"response\":\"null\"},\"election\":{\"request\":[{\"name\":\"OwnID\",\"type\":\"int\"}],\"response\":\"boolean\"},\"elected\":{\"request\":[{\"name\":\"OwnID\",\"type\":\"int\"},{\"name\":\"NextID\",\"type\":\"int\"}],\"response\":\"boolean\"},\"IsAlive\":{\"request\":[],\"response\":\"boolean\"},\"UserEnters\":{\"request\":[{\"name\":\"username\",\"type\":\"string\"}],\"response\":\"null\"},\"UserLeaves\":{\"request\":[{\"name\":\"username\",\"type\":\"string\"}],\"response\":\"null\"},\"EmptyFridge\":{\"request\":[{\"name\":\"fridgeID\",\"type\":\"int\"}],\"response\":\"null\"}}}");
  java.lang.Void _sync(java.util.Map<java.lang.CharSequence,java.util.List<java.lang.Integer>> Clients, java.util.Map<java.lang.CharSequence,java.util.Map<java.lang.CharSequence,java.lang.Boolean>> Users, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> addresses) throws org.apache.avro.AvroRemoteException;
  boolean election(int OwnID) throws org.apache.avro.AvroRemoteException;
  boolean elected(int OwnID, int NextID) throws org.apache.avro.AvroRemoteException;
  boolean IsAlive() throws org.apache.avro.AvroRemoteException;
  java.lang.Void UserEnters(java.lang.CharSequence username) throws org.apache.avro.AvroRemoteException;
  java.lang.Void UserLeaves(java.lang.CharSequence username) throws org.apache.avro.AvroRemoteException;
  java.lang.Void EmptyFridge(int fridgeID) throws org.apache.avro.AvroRemoteException;

  @SuppressWarnings("all")
  public interface Callback extends User {
    public static final org.apache.avro.Protocol PROTOCOL = avro.domotics.proto.user.User.PROTOCOL;
    void _sync(java.util.Map<java.lang.CharSequence,java.util.List<java.lang.Integer>> Clients, java.util.Map<java.lang.CharSequence,java.util.Map<java.lang.CharSequence,java.lang.Boolean>> Users, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> addresses, org.apache.avro.ipc.Callback<java.lang.Void> callback) throws java.io.IOException;
    void election(int OwnID, org.apache.avro.ipc.Callback<java.lang.Boolean> callback) throws java.io.IOException;
    void elected(int OwnID, int NextID, org.apache.avro.ipc.Callback<java.lang.Boolean> callback) throws java.io.IOException;
    void IsAlive(org.apache.avro.ipc.Callback<java.lang.Boolean> callback) throws java.io.IOException;
    void UserEnters(java.lang.CharSequence username, org.apache.avro.ipc.Callback<java.lang.Void> callback) throws java.io.IOException;
    void UserLeaves(java.lang.CharSequence username, org.apache.avro.ipc.Callback<java.lang.Void> callback) throws java.io.IOException;
    void EmptyFridge(int fridgeID, org.apache.avro.ipc.Callback<java.lang.Void> callback) throws java.io.IOException;
  }
}